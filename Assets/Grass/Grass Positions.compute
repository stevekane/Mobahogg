#pragma kernel GenerateGrass

#include "Assets/Shaders/Includes/Noise.hlsl"

struct GrassInstance
{
  float3 position;
};

StructuredBuffer<uint> Triangles;
StructuredBuffer<float3> VertexPositions;
StructuredBuffer<float3> VertexNormals;
StructuredBuffer<float3> VertexDensities;
AppendStructuredBuffer<GrassInstance> GrassInstances;

uint TriangleCount;
float MaxDensity;

[numthreads(1, 1, 1)]
void GenerateGrass(uint3 id : SV_DispatchThreadID)
{
  if (id.x >= TriangleCount) return;

  uint instanceCount = 100;

  for (uint i = 0; i < instanceCount; i++) {
    GrassInstance instance;
    instance.position = float3(i % 10, 0, i / 10);
    GrassInstances.Append(instance);
  }
}